//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mvc_MovieShelf.MovieLookupServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListContractOfRatingTypeContractZchJDT3W", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainListContractOfRatingTypeContractZchJDT3W : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract[] EntityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract[] EntityList {
            get {
                return this.EntityListField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListField, value) != true)) {
                    this.EntityListField = value;
                    this.RaisePropertyChanged("EntityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainStatusContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainStatusContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.DomainMessageContract[] MessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainMessageContract[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RatingTypeContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class RatingTypeContract : Mvc_MovieShelf.MovieLookupServiceReference.BaseLookupContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainMessageContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainMessageContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.EMessageNumber IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.EMessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.EMessageNumber Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.EMessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EMessageNumber", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain")]
    public enum EMessageNumber : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotInitialised = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExceptionMessage = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorLastModifiedByNotPresent = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorLastModifiedByToLong = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorLastModifiedDateNotPresent = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrLastModifiedDateInFuture = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorNameNotPresent = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorNameToLong = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorContactDetailsNotPresent = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorPhoneToLong = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorEmailToLong = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrCollectedDateInFuture = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidBorrowedBy = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidBorrowedMovie = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorDateBorrowedNotPresent = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrDateBorrowedInFuture = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrDateOverdueMustBeInFuture = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrDateReturnedMustBeInFuture = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidDisplayImage = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidSeries = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidGenre = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidType = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidStatus = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidRating = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidViewRating = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidMonetaryValue = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityListContainsErrors = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeletionErrorStillActive = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeletionErrorStillInUse = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulRead = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoDataFound = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulAdd = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulUpdate = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulDelete = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulOperationCheck = 205,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EMessageType", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain")]
    public enum EMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDomainContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.BaseLookupContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract))]
    public partial class BaseDomainContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRemovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasChanged {
            get {
                return this.HasChangedField;
            }
            set {
                if ((this.HasChangedField.Equals(value) != true)) {
                    this.HasChangedField = value;
                    this.RaisePropertyChanged("HasChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRemoved {
            get {
                return this.IsRemovedField;
            }
            set {
                if ((this.IsRemovedField.Equals(value) != true)) {
                    this.IsRemovedField = value;
                    this.RaisePropertyChanged("IsRemoved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.TimestampField, value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayImageContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DisplayImageContract : Mvc_MovieShelf.MovieLookupServiceReference.BaseDomainContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseLookupContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract))]
    public partial class BaseLookupContract : Mvc_MovieShelf.MovieLookupServiceReference.BaseDomainContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract DisplayImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract DisplayImage {
            get {
                return this.DisplayImageField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayImageField, value) != true)) {
                    this.DisplayImageField = value;
                    this.RaisePropertyChanged("DisplayImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusTypeContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class StatusTypeContract : Mvc_MovieShelf.MovieLookupServiceReference.BaseLookupContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewRatingTypeContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ViewRatingTypeContract : Mvc_MovieShelf.MovieLookupServiceReference.BaseLookupContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenreTypeContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GenreTypeContract : Mvc_MovieShelf.MovieLookupServiceReference.BaseLookupContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieTypeContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class MovieTypeContract : Mvc_MovieShelf.MovieLookupServiceReference.BaseLookupContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListContractOfStatusTypeContractZchJDT3W", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainListContractOfStatusTypeContractZchJDT3W : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract[] EntityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract[] EntityList {
            get {
                return this.EntityListField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListField, value) != true)) {
                    this.EntityListField = value;
                    this.RaisePropertyChanged("EntityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListContractOfViewRatingTypeContractZchJDT3W", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainListContractOfViewRatingTypeContractZchJDT3W : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract[] EntityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract[] EntityList {
            get {
                return this.EntityListField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListField, value) != true)) {
                    this.EntityListField = value;
                    this.RaisePropertyChanged("EntityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListContractOfDisplayImageContractZchJDT3W", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainListContractOfDisplayImageContractZchJDT3W : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract[] EntityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract[] EntityList {
            get {
                return this.EntityListField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListField, value) != true)) {
                    this.EntityListField = value;
                    this.RaisePropertyChanged("EntityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListContractOfGenreTypeContractZchJDT3W", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainListContractOfGenreTypeContractZchJDT3W : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract[] EntityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract[] EntityList {
            get {
                return this.EntityListField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListField, value) != true)) {
                    this.EntityListField = value;
                    this.RaisePropertyChanged("EntityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListContractOfMovieTypeContractZchJDT3W", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainListContractOfMovieTypeContractZchJDT3W : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract[] EntityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract[] EntityList {
            get {
                return this.EntityListField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListField, value) != true)) {
                    this.EntityListField = value;
                    this.RaisePropertyChanged("EntityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieLookupServiceReference.IMovieLookupService")]
    public interface IMovieLookupService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveAllRatingTypes", ReplyAction="http://tempuri.org/IMovieLookupService/SaveAllRatingTypesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfRatingTypeContractZchJDT3W SaveAllRatingTypes(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfRatingTypeContractZchJDT3W contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveAllStatusTypes", ReplyAction="http://tempuri.org/IMovieLookupService/SaveAllStatusTypesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfStatusTypeContractZchJDT3W SaveAllStatusTypes(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfStatusTypeContractZchJDT3W contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveAllViewRatingTypes", ReplyAction="http://tempuri.org/IMovieLookupService/SaveAllViewRatingTypesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfViewRatingTypeContractZchJDT3W SaveAllViewRatingTypes(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfViewRatingTypeContractZchJDT3W contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/RemoveDisplayImage", ReplyAction="http://tempuri.org/IMovieLookupService/RemoveDisplayImageResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveDisplayImage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/RemoveGenreType", ReplyAction="http://tempuri.org/IMovieLookupService/RemoveGenreTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveGenreType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/RemoveMovieType", ReplyAction="http://tempuri.org/IMovieLookupService/RemoveMovieTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveMovieType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/RemoveRatingType", ReplyAction="http://tempuri.org/IMovieLookupService/RemoveRatingTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveRatingType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/RemoveStatusType", ReplyAction="http://tempuri.org/IMovieLookupService/RemoveStatusTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveStatusType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/RemoveViewRatingType", ReplyAction="http://tempuri.org/IMovieLookupService/RemoveViewRatingTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveViewRatingType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/HelloService", ReplyAction="http://tempuri.org/IMovieLookupService/HelloServiceResponse")]
        string HelloService(string greeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/CreateDisplayImage", ReplyAction="http://tempuri.org/IMovieLookupService/CreateDisplayImageResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract CreateDisplayImage(Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/CreateGenreType", ReplyAction="http://tempuri.org/IMovieLookupService/CreateGenreTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract CreateGenreType(Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/CreateMovieType", ReplyAction="http://tempuri.org/IMovieLookupService/CreateMovieTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract CreateMovieType(Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/CreateRatingType", ReplyAction="http://tempuri.org/IMovieLookupService/CreateRatingTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract CreateRatingType(Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/CreateStatusType", ReplyAction="http://tempuri.org/IMovieLookupService/CreateStatusTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract CreateStatusType(Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/CreateViewRatingType", ReplyAction="http://tempuri.org/IMovieLookupService/CreateViewRatingTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract CreateViewRatingType(Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchDisplayImage", ReplyAction="http://tempuri.org/IMovieLookupService/FetchDisplayImageResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract FetchDisplayImage(int id, bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchGenreType", ReplyAction="http://tempuri.org/IMovieLookupService/FetchGenreTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract FetchGenreType(int id, bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchMovieType", ReplyAction="http://tempuri.org/IMovieLookupService/FetchMovieTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract FetchMovieType(int id, bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchRatingType", ReplyAction="http://tempuri.org/IMovieLookupService/FetchRatingTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract FetchRatingType(int id, bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchStatusType", ReplyAction="http://tempuri.org/IMovieLookupService/FetchStatusTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract FetchStatusType(int id, bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchViewRatingType", ReplyAction="http://tempuri.org/IMovieLookupService/FetchViewRatingTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract FetchViewRatingType(int id, bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchAllDisplayImages", ReplyAction="http://tempuri.org/IMovieLookupService/FetchAllDisplayImagesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfDisplayImageContractZchJDT3W FetchAllDisplayImages(bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchAllGenreTypes", ReplyAction="http://tempuri.org/IMovieLookupService/FetchAllGenreTypesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfGenreTypeContractZchJDT3W FetchAllGenreTypes(bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchAllMovieTypes", ReplyAction="http://tempuri.org/IMovieLookupService/FetchAllMovieTypesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfMovieTypeContractZchJDT3W FetchAllMovieTypes(bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchAllRatingTypes", ReplyAction="http://tempuri.org/IMovieLookupService/FetchAllRatingTypesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfRatingTypeContractZchJDT3W FetchAllRatingTypes(bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchAllStatusTypes", ReplyAction="http://tempuri.org/IMovieLookupService/FetchAllStatusTypesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfStatusTypeContractZchJDT3W FetchAllStatusTypes(bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/FetchAllViewRatingTypes", ReplyAction="http://tempuri.org/IMovieLookupService/FetchAllViewRatingTypesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfViewRatingTypeContractZchJDT3W FetchAllViewRatingTypes(bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveDisplayImage", ReplyAction="http://tempuri.org/IMovieLookupService/SaveDisplayImageResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract SaveDisplayImage(Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveGenreType", ReplyAction="http://tempuri.org/IMovieLookupService/SaveGenreTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract SaveGenreType(Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveMovieType", ReplyAction="http://tempuri.org/IMovieLookupService/SaveMovieTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract SaveMovieType(Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveRatingType", ReplyAction="http://tempuri.org/IMovieLookupService/SaveRatingTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract SaveRatingType(Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveStatusType", ReplyAction="http://tempuri.org/IMovieLookupService/SaveStatusTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract SaveStatusType(Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveViewRatingType", ReplyAction="http://tempuri.org/IMovieLookupService/SaveViewRatingTypeResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract SaveViewRatingType(Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveAllDisplayImages", ReplyAction="http://tempuri.org/IMovieLookupService/SaveAllDisplayImagesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfDisplayImageContractZchJDT3W SaveAllDisplayImages(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfDisplayImageContractZchJDT3W contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveAllGenreTypes", ReplyAction="http://tempuri.org/IMovieLookupService/SaveAllGenreTypesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfGenreTypeContractZchJDT3W SaveAllGenreTypes(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfGenreTypeContractZchJDT3W contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieLookupService/SaveAllMovieTypes", ReplyAction="http://tempuri.org/IMovieLookupService/SaveAllMovieTypesResponse")]
        Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfMovieTypeContractZchJDT3W SaveAllMovieTypes(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfMovieTypeContractZchJDT3W contract);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieLookupServiceChannel : Mvc_MovieShelf.MovieLookupServiceReference.IMovieLookupService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieLookupServiceClient : System.ServiceModel.ClientBase<Mvc_MovieShelf.MovieLookupServiceReference.IMovieLookupService>, Mvc_MovieShelf.MovieLookupServiceReference.IMovieLookupService {
        
        public MovieLookupServiceClient() {
        }
        
        public MovieLookupServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieLookupServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieLookupServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieLookupServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfRatingTypeContractZchJDT3W SaveAllRatingTypes(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfRatingTypeContractZchJDT3W contract) {
            return base.Channel.SaveAllRatingTypes(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfStatusTypeContractZchJDT3W SaveAllStatusTypes(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfStatusTypeContractZchJDT3W contract) {
            return base.Channel.SaveAllStatusTypes(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfViewRatingTypeContractZchJDT3W SaveAllViewRatingTypes(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfViewRatingTypeContractZchJDT3W contract) {
            return base.Channel.SaveAllViewRatingTypes(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveDisplayImage(int id) {
            return base.Channel.RemoveDisplayImage(id);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveGenreType(int id) {
            return base.Channel.RemoveGenreType(id);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveMovieType(int id) {
            return base.Channel.RemoveMovieType(id);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveRatingType(int id) {
            return base.Channel.RemoveRatingType(id);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveStatusType(int id) {
            return base.Channel.RemoveStatusType(id);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainStatusContract RemoveViewRatingType(int id) {
            return base.Channel.RemoveViewRatingType(id);
        }
        
        public string HelloService(string greeting) {
            return base.Channel.HelloService(greeting);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract CreateDisplayImage(Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract contract) {
            return base.Channel.CreateDisplayImage(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract CreateGenreType(Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract contract) {
            return base.Channel.CreateGenreType(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract CreateMovieType(Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract contract) {
            return base.Channel.CreateMovieType(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract CreateRatingType(Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract contract) {
            return base.Channel.CreateRatingType(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract CreateStatusType(Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract contract) {
            return base.Channel.CreateStatusType(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract CreateViewRatingType(Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract contract) {
            return base.Channel.CreateViewRatingType(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract FetchDisplayImage(int id, bool includeDeletion) {
            return base.Channel.FetchDisplayImage(id, includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract FetchGenreType(int id, bool includeDeletion) {
            return base.Channel.FetchGenreType(id, includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract FetchMovieType(int id, bool includeDeletion) {
            return base.Channel.FetchMovieType(id, includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract FetchRatingType(int id, bool includeDeletion) {
            return base.Channel.FetchRatingType(id, includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract FetchStatusType(int id, bool includeDeletion) {
            return base.Channel.FetchStatusType(id, includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract FetchViewRatingType(int id, bool includeDeletion) {
            return base.Channel.FetchViewRatingType(id, includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfDisplayImageContractZchJDT3W FetchAllDisplayImages(bool includeDeletion) {
            return base.Channel.FetchAllDisplayImages(includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfGenreTypeContractZchJDT3W FetchAllGenreTypes(bool includeDeletion) {
            return base.Channel.FetchAllGenreTypes(includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfMovieTypeContractZchJDT3W FetchAllMovieTypes(bool includeDeletion) {
            return base.Channel.FetchAllMovieTypes(includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfRatingTypeContractZchJDT3W FetchAllRatingTypes(bool includeDeletion) {
            return base.Channel.FetchAllRatingTypes(includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfStatusTypeContractZchJDT3W FetchAllStatusTypes(bool includeDeletion) {
            return base.Channel.FetchAllStatusTypes(includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfViewRatingTypeContractZchJDT3W FetchAllViewRatingTypes(bool includeDeletion) {
            return base.Channel.FetchAllViewRatingTypes(includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract SaveDisplayImage(Mvc_MovieShelf.MovieLookupServiceReference.DisplayImageContract contract) {
            return base.Channel.SaveDisplayImage(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract SaveGenreType(Mvc_MovieShelf.MovieLookupServiceReference.GenreTypeContract contract) {
            return base.Channel.SaveGenreType(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract SaveMovieType(Mvc_MovieShelf.MovieLookupServiceReference.MovieTypeContract contract) {
            return base.Channel.SaveMovieType(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract SaveRatingType(Mvc_MovieShelf.MovieLookupServiceReference.RatingTypeContract contract) {
            return base.Channel.SaveRatingType(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract SaveStatusType(Mvc_MovieShelf.MovieLookupServiceReference.StatusTypeContract contract) {
            return base.Channel.SaveStatusType(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract SaveViewRatingType(Mvc_MovieShelf.MovieLookupServiceReference.ViewRatingTypeContract contract) {
            return base.Channel.SaveViewRatingType(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfDisplayImageContractZchJDT3W SaveAllDisplayImages(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfDisplayImageContractZchJDT3W contract) {
            return base.Channel.SaveAllDisplayImages(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfGenreTypeContractZchJDT3W SaveAllGenreTypes(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfGenreTypeContractZchJDT3W contract) {
            return base.Channel.SaveAllGenreTypes(contract);
        }
        
        public Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfMovieTypeContractZchJDT3W SaveAllMovieTypes(Mvc_MovieShelf.MovieLookupServiceReference.DomainListContractOfMovieTypeContractZchJDT3W contract) {
            return base.Channel.SaveAllMovieTypes(contract);
        }
    }
}
