//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mvc_MovieShelf.MovieBorrowServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDomainContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.DisplayImageContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.BaseEntityContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract))]
    public partial class BaseDomainContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRemovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasChanged {
            get {
                return this.HasChangedField;
            }
            set {
                if ((this.HasChangedField.Equals(value) != true)) {
                    this.HasChangedField = value;
                    this.RaisePropertyChanged("HasChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRemoved {
            get {
                return this.IsRemovedField;
            }
            set {
                if ((this.IsRemovedField.Equals(value) != true)) {
                    this.IsRemovedField = value;
                    this.RaisePropertyChanged("IsRemoved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.TimestampField, value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainStatusContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainStatusContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieBorrowServiceReference.DomainMessageContract[] MessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieBorrowServiceReference.DomainMessageContract[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayImageContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DisplayImageContract : Mvc_MovieShelf.MovieBorrowServiceReference.BaseDomainContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntityContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract))]
    public partial class BaseEntityContract : Mvc_MovieShelf.MovieBorrowServiceReference.BaseDomainContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieBorrowServiceReference.DisplayImageContract DisplayImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieBorrowServiceReference.DisplayImageContract DisplayImage {
            get {
                return this.DisplayImageField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayImageField, value) != true)) {
                    this.DisplayImageField = value;
                    this.RaisePropertyChanged("DisplayImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BorrowedItemContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.BaseEntityContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.BaseDomainContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.DomainMessageContract[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.DomainMessageContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.DisplayImageContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowerContractZchJDT3W))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowedItemContractZchJDT3W))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.EMessageNumber))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mvc_MovieShelf.MovieBorrowServiceReference.EMessageType))]
    public partial class BorrowedItemContract : Mvc_MovieShelf.MovieBorrowServiceReference.BaseEntityContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object BorrowedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object BorrowedMovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateBorrowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOverdueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateReturnedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object BorrowedBy {
            get {
                return this.BorrowedByField;
            }
            set {
                if ((object.ReferenceEquals(this.BorrowedByField, value) != true)) {
                    this.BorrowedByField = value;
                    this.RaisePropertyChanged("BorrowedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object BorrowedMovie {
            get {
                return this.BorrowedMovieField;
            }
            set {
                if ((object.ReferenceEquals(this.BorrowedMovieField, value) != true)) {
                    this.BorrowedMovieField = value;
                    this.RaisePropertyChanged("BorrowedMovie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateBorrowed {
            get {
                return this.DateBorrowedField;
            }
            set {
                if ((this.DateBorrowedField.Equals(value) != true)) {
                    this.DateBorrowedField = value;
                    this.RaisePropertyChanged("DateBorrowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOverdue {
            get {
                return this.DateOverdueField;
            }
            set {
                if ((this.DateOverdueField.Equals(value) != true)) {
                    this.DateOverdueField = value;
                    this.RaisePropertyChanged("DateOverdue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateReturned {
            get {
                return this.DateReturnedField;
            }
            set {
                if ((this.DateReturnedField.Equals(value) != true)) {
                    this.DateReturnedField = value;
                    this.RaisePropertyChanged("DateReturned");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BorrowerContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class BorrowerContract : Mvc_MovieShelf.MovieBorrowServiceReference.BaseEntityContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainMessageContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainMessageContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieBorrowServiceReference.EMessageNumber IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieBorrowServiceReference.EMessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieBorrowServiceReference.EMessageNumber Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieBorrowServiceReference.EMessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EMessageNumber", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain")]
    public enum EMessageNumber : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotInitialised = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExceptionMessage = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorLastModifiedByNotPresent = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorLastModifiedByToLong = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorLastModifiedDateNotPresent = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrLastModifiedDateInFuture = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorNameNotPresent = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorNameToLong = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorContactDetailsNotPresent = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorPhoneToLong = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorEmailToLong = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrCollectedDateInFuture = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidBorrowedBy = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidBorrowedMovie = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorDateBorrowedNotPresent = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrDateBorrowedInFuture = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrDateOverdueMustBeInFuture = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrDateReturnedMustBeInFuture = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidDisplayImage = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidSeries = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidGenre = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidType = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidStatus = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidRating = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidViewRating = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidMonetaryValue = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityListContainsErrors = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeletionErrorStillActive = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeletionErrorStillInUse = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulRead = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoDataFound = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulAdd = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulUpdate = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulDelete = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulOperationCheck = 205,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EMessageType", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain")]
    public enum EMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListContractOfBorrowerContractZchJDT3W", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainListContractOfBorrowerContractZchJDT3W : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract[] EntityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract[] EntityList {
            get {
                return this.EntityListField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListField, value) != true)) {
                    this.EntityListField = value;
                    this.RaisePropertyChanged("EntityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListContractOfBorrowedItemContractZchJDT3W", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainListContractOfBorrowedItemContractZchJDT3W : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract[] EntityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract[] EntityList {
            get {
                return this.EntityListField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListField, value) != true)) {
                    this.EntityListField = value;
                    this.RaisePropertyChanged("EntityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieBorrowServiceReference.IMovieBorrowService")]
    public interface IMovieBorrowService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/HelloService", ReplyAction="http://tempuri.org/IMovieBorrowService/HelloServiceResponse")]
        string HelloService(string greeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/CreateBorrower", ReplyAction="http://tempuri.org/IMovieBorrowService/CreateBorrowerResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract CreateBorrower(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/CreateBorrowedItem", ReplyAction="http://tempuri.org/IMovieBorrowService/CreateBorrowedItemResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract CreateBorrowedItem(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/FetchBorrower", ReplyAction="http://tempuri.org/IMovieBorrowService/FetchBorrowerResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract FetchBorrower(int id, bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/FetchBorrowedItem", ReplyAction="http://tempuri.org/IMovieBorrowService/FetchBorrowedItemResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract FetchBorrowedItem(int id, bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/FetchAllBorrowers", ReplyAction="http://tempuri.org/IMovieBorrowService/FetchAllBorrowersResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowerContractZchJDT3W FetchAllBorrowers(bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/FetchAllBorrowedItems", ReplyAction="http://tempuri.org/IMovieBorrowService/FetchAllBorrowedItemsResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowedItemContractZchJDT3W FetchAllBorrowedItems(bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/SaveBorrower", ReplyAction="http://tempuri.org/IMovieBorrowService/SaveBorrowerResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract SaveBorrower(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/SaveBorrowedItem", ReplyAction="http://tempuri.org/IMovieBorrowService/SaveBorrowedItemResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract SaveBorrowedItem(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/SaveAllBorrowers", ReplyAction="http://tempuri.org/IMovieBorrowService/SaveAllBorrowersResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowerContractZchJDT3W SaveAllBorrowers(Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowerContractZchJDT3W contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/SaveAllBorrowedItems", ReplyAction="http://tempuri.org/IMovieBorrowService/SaveAllBorrowedItemsResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowedItemContractZchJDT3W SaveAllBorrowedItems(Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowedItemContractZchJDT3W contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/RemoveBorrower", ReplyAction="http://tempuri.org/IMovieBorrowService/RemoveBorrowerResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract RemoveBorrower(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieBorrowService/RemoveBorrowedItem", ReplyAction="http://tempuri.org/IMovieBorrowService/RemoveBorrowedItemResponse")]
        Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract RemoveBorrowedItem(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieBorrowServiceChannel : Mvc_MovieShelf.MovieBorrowServiceReference.IMovieBorrowService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieBorrowServiceClient : System.ServiceModel.ClientBase<Mvc_MovieShelf.MovieBorrowServiceReference.IMovieBorrowService>, Mvc_MovieShelf.MovieBorrowServiceReference.IMovieBorrowService {
        
        public MovieBorrowServiceClient() {
        }
        
        public MovieBorrowServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieBorrowServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieBorrowServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieBorrowServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloService(string greeting) {
            return base.Channel.HelloService(greeting);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract CreateBorrower(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract contract) {
            return base.Channel.CreateBorrower(contract);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract CreateBorrowedItem(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract contract) {
            return base.Channel.CreateBorrowedItem(contract);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract FetchBorrower(int id, bool includeDeletion) {
            return base.Channel.FetchBorrower(id, includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract FetchBorrowedItem(int id, bool includeDeletion) {
            return base.Channel.FetchBorrowedItem(id, includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowerContractZchJDT3W FetchAllBorrowers(bool includeDeletion) {
            return base.Channel.FetchAllBorrowers(includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowedItemContractZchJDT3W FetchAllBorrowedItems(bool includeDeletion) {
            return base.Channel.FetchAllBorrowedItems(includeDeletion);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract SaveBorrower(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowerContract contract) {
            return base.Channel.SaveBorrower(contract);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract SaveBorrowedItem(Mvc_MovieShelf.MovieBorrowServiceReference.BorrowedItemContract contract) {
            return base.Channel.SaveBorrowedItem(contract);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowerContractZchJDT3W SaveAllBorrowers(Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowerContractZchJDT3W contract) {
            return base.Channel.SaveAllBorrowers(contract);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowedItemContractZchJDT3W SaveAllBorrowedItems(Mvc_MovieShelf.MovieBorrowServiceReference.DomainListContractOfBorrowedItemContractZchJDT3W contract) {
            return base.Channel.SaveAllBorrowedItems(contract);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract RemoveBorrower(int id) {
            return base.Channel.RemoveBorrower(id);
        }
        
        public Mvc_MovieShelf.MovieBorrowServiceReference.DomainStatusContract RemoveBorrowedItem(int id) {
            return base.Channel.RemoveBorrowedItem(id);
        }
    }
}
