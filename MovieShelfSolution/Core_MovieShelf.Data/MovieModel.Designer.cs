//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_BorrowedItem_Borrower", "Borrower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Core_MovieShelf.Data.Borrower), "BorrowedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.BorrowedItem), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_BorrowedItem_MovieDetail", "MovieDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Core_MovieShelf.Data.MovieDetail), "BorrowedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.BorrowedItem), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_Borrower_DisplayImage", "DisplayImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.DisplayImage), "Borrower", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.Borrower), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_GenreType_DisplayImage", "DisplayImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.DisplayImage), "GenreType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.GenreType), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_MovieDetail_DisplayImage", "DisplayImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.DisplayImage), "MovieDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.MovieDetail), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_MovieSeries_DisplayImage", "DisplayImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.DisplayImage), "MovieSeries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.MovieSery), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_MovieType_DisplayImage", "DisplayImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.DisplayImage), "MovieType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.MovieType), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_RatingType_DisplayImage", "DisplayImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.DisplayImage), "RatingType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.RatingType), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_StatusType_DisplayImage", "DisplayImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.DisplayImage), "StatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.StatusType), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_ViewRatingType_DisplayImage", "DisplayImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.DisplayImage), "ViewRatingType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.ViewRatingType), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_MovieDetail_GenreType", "GenreType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.GenreType), "MovieDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.MovieDetail), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_MovieDetail_MovieSeries", "MovieSeries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.MovieSery), "MovieDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.MovieDetail), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_MovieDetail_MovieType", "MovieType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.MovieType), "MovieDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.MovieDetail), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_MovieDetail_RatingType", "RatingType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.RatingType), "MovieDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.MovieDetail), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_MovieDetail_StatusType", "StatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.StatusType), "MovieDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.MovieDetail), true)]
[assembly: EdmRelationshipAttribute("MovieShelfModel", "FK_MovieDetail_ViewRatingType", "ViewRatingType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Core_MovieShelf.Data.ViewRatingType), "MovieDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Core_MovieShelf.Data.MovieDetail), true)]

#endregion

namespace Core_MovieShelf.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MovieShelfEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MovieShelfEntities object using the connection string found in the 'MovieShelfEntities' section of the application configuration file.
        /// </summary>
        public MovieShelfEntities() : base("name=MovieShelfEntities", "MovieShelfEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MovieShelfEntities object.
        /// </summary>
        public MovieShelfEntities(string connectionString) : base(connectionString, "MovieShelfEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MovieShelfEntities object.
        /// </summary>
        public MovieShelfEntities(EntityConnection connection) : base(connection, "MovieShelfEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BorrowedItem> BorrowedItems
        {
            get
            {
                if ((_BorrowedItems == null))
                {
                    _BorrowedItems = base.CreateObjectSet<BorrowedItem>("BorrowedItems");
                }
                return _BorrowedItems;
            }
        }
        private ObjectSet<BorrowedItem> _BorrowedItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Borrower> Borrowers
        {
            get
            {
                if ((_Borrowers == null))
                {
                    _Borrowers = base.CreateObjectSet<Borrower>("Borrowers");
                }
                return _Borrowers;
            }
        }
        private ObjectSet<Borrower> _Borrowers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisplayImage> DisplayImages
        {
            get
            {
                if ((_DisplayImages == null))
                {
                    _DisplayImages = base.CreateObjectSet<DisplayImage>("DisplayImages");
                }
                return _DisplayImages;
            }
        }
        private ObjectSet<DisplayImage> _DisplayImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GenreType> GenreTypes
        {
            get
            {
                if ((_GenreTypes == null))
                {
                    _GenreTypes = base.CreateObjectSet<GenreType>("GenreTypes");
                }
                return _GenreTypes;
            }
        }
        private ObjectSet<GenreType> _GenreTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MovieDetail> MovieDetails
        {
            get
            {
                if ((_MovieDetails == null))
                {
                    _MovieDetails = base.CreateObjectSet<MovieDetail>("MovieDetails");
                }
                return _MovieDetails;
            }
        }
        private ObjectSet<MovieDetail> _MovieDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MovieSery> MovieSeries
        {
            get
            {
                if ((_MovieSeries == null))
                {
                    _MovieSeries = base.CreateObjectSet<MovieSery>("MovieSeries");
                }
                return _MovieSeries;
            }
        }
        private ObjectSet<MovieSery> _MovieSeries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MovieType> MovieTypes
        {
            get
            {
                if ((_MovieTypes == null))
                {
                    _MovieTypes = base.CreateObjectSet<MovieType>("MovieTypes");
                }
                return _MovieTypes;
            }
        }
        private ObjectSet<MovieType> _MovieTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RatingType> RatingTypes
        {
            get
            {
                if ((_RatingTypes == null))
                {
                    _RatingTypes = base.CreateObjectSet<RatingType>("RatingTypes");
                }
                return _RatingTypes;
            }
        }
        private ObjectSet<RatingType> _RatingTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StatusType> StatusTypes
        {
            get
            {
                if ((_StatusTypes == null))
                {
                    _StatusTypes = base.CreateObjectSet<StatusType>("StatusTypes");
                }
                return _StatusTypes;
            }
        }
        private ObjectSet<StatusType> _StatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ViewRatingType> ViewRatingTypes
        {
            get
            {
                if ((_ViewRatingTypes == null))
                {
                    _ViewRatingTypes = base.CreateObjectSet<ViewRatingType>("ViewRatingTypes");
                }
                return _ViewRatingTypes;
            }
        }
        private ObjectSet<ViewRatingType> _ViewRatingTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BorrowedItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBorrowedItems(BorrowedItem borrowedItem)
        {
            base.AddObject("BorrowedItems", borrowedItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Borrowers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBorrowers(Borrower borrower)
        {
            base.AddObject("Borrowers", borrower);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisplayImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisplayImages(DisplayImage displayImage)
        {
            base.AddObject("DisplayImages", displayImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GenreTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenreTypes(GenreType genreType)
        {
            base.AddObject("GenreTypes", genreType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MovieDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovieDetails(MovieDetail movieDetail)
        {
            base.AddObject("MovieDetails", movieDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MovieSeries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovieSeries(MovieSery movieSery)
        {
            base.AddObject("MovieSeries", movieSery);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MovieTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovieTypes(MovieType movieType)
        {
            base.AddObject("MovieTypes", movieType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RatingTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRatingTypes(RatingType ratingType)
        {
            base.AddObject("RatingTypes", ratingType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatusTypes(StatusType statusType)
        {
            base.AddObject("StatusTypes", statusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ViewRatingTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToViewRatingTypes(ViewRatingType viewRatingType)
        {
            base.AddObject("ViewRatingTypes", viewRatingType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MovieShelfModel", Name="BorrowedItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BorrowedItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BorrowedItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="borrowerId">Initial value of the BorrowerId property.</param>
        /// <param name="movieDetailId">Initial value of the MovieDetailId property.</param>
        /// <param name="dateBorrowed">Initial value of the DateBorrowed property.</param>
        /// <param name="overdueDate">Initial value of the OverdueDate property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static BorrowedItem CreateBorrowedItem(global::System.Int32 id, global::System.Int32 borrowerId, global::System.Int32 movieDetailId, global::System.DateTime dateBorrowed, global::System.DateTime overdueDate, global::System.String modifiedBy, global::System.DateTime modifiedDate, global::System.Byte[] timeStamp)
        {
            BorrowedItem borrowedItem = new BorrowedItem();
            borrowedItem.Id = id;
            borrowedItem.BorrowerId = borrowerId;
            borrowedItem.MovieDetailId = movieDetailId;
            borrowedItem.DateBorrowed = dateBorrowed;
            borrowedItem.OverdueDate = overdueDate;
            borrowedItem.ModifiedBy = modifiedBy;
            borrowedItem.ModifiedDate = modifiedDate;
            borrowedItem.TimeStamp = timeStamp;
            return borrowedItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BorrowerId
        {
            get
            {
                return _BorrowerId;
            }
            set
            {
                OnBorrowerIdChanging(value);
                ReportPropertyChanging("BorrowerId");
                _BorrowerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BorrowerId");
                OnBorrowerIdChanged();
            }
        }
        private global::System.Int32 _BorrowerId;
        partial void OnBorrowerIdChanging(global::System.Int32 value);
        partial void OnBorrowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieDetailId
        {
            get
            {
                return _MovieDetailId;
            }
            set
            {
                OnMovieDetailIdChanging(value);
                ReportPropertyChanging("MovieDetailId");
                _MovieDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieDetailId");
                OnMovieDetailIdChanged();
            }
        }
        private global::System.Int32 _MovieDetailId;
        partial void OnMovieDetailIdChanging(global::System.Int32 value);
        partial void OnMovieDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateBorrowed
        {
            get
            {
                return _DateBorrowed;
            }
            set
            {
                OnDateBorrowedChanging(value);
                ReportPropertyChanging("DateBorrowed");
                _DateBorrowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateBorrowed");
                OnDateBorrowedChanged();
            }
        }
        private global::System.DateTime _DateBorrowed;
        partial void OnDateBorrowedChanging(global::System.DateTime value);
        partial void OnDateBorrowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateReturned
        {
            get
            {
                return _DateReturned;
            }
            set
            {
                OnDateReturnedChanging(value);
                ReportPropertyChanging("DateReturned");
                _DateReturned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateReturned");
                OnDateReturnedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateReturned;
        partial void OnDateReturnedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateReturnedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OverdueDate
        {
            get
            {
                return _OverdueDate;
            }
            set
            {
                OnOverdueDateChanging(value);
                ReportPropertyChanging("OverdueDate");
                _OverdueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverdueDate");
                OnOverdueDateChanged();
            }
        }
        private global::System.DateTime _OverdueDate;
        partial void OnOverdueDateChanging(global::System.DateTime value);
        partial void OnOverdueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_BorrowedItem_Borrower", "Borrower")]
        public Borrower Borrower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Borrower>("MovieShelfModel.FK_BorrowedItem_Borrower", "Borrower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Borrower>("MovieShelfModel.FK_BorrowedItem_Borrower", "Borrower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Borrower> BorrowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Borrower>("MovieShelfModel.FK_BorrowedItem_Borrower", "Borrower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Borrower>("MovieShelfModel.FK_BorrowedItem_Borrower", "Borrower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_BorrowedItem_MovieDetail", "MovieDetail")]
        public MovieDetail MovieDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieDetail>("MovieShelfModel.FK_BorrowedItem_MovieDetail", "MovieDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieDetail>("MovieShelfModel.FK_BorrowedItem_MovieDetail", "MovieDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MovieDetail> MovieDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieDetail>("MovieShelfModel.FK_BorrowedItem_MovieDetail", "MovieDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MovieDetail>("MovieShelfModel.FK_BorrowedItem_MovieDetail", "MovieDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MovieShelfModel", Name="Borrower")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Borrower : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Borrower object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static Borrower CreateBorrower(global::System.Int32 id, global::System.String name, global::System.String modifiedBy, global::System.DateTime modifiedDate, global::System.Byte[] timeStamp)
        {
            Borrower borrower = new Borrower();
            borrower.Id = id;
            borrower.Name = name;
            borrower.ModifiedBy = modifiedBy;
            borrower.ModifiedDate = modifiedDate;
            borrower.TimeStamp = timeStamp;
            return borrower;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayImageId
        {
            get
            {
                return _DisplayImageId;
            }
            set
            {
                OnDisplayImageIdChanging(value);
                ReportPropertyChanging("DisplayImageId");
                _DisplayImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayImageId");
                OnDisplayImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayImageId;
        partial void OnDisplayImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_BorrowedItem_Borrower", "BorrowedItem")]
        public EntityCollection<BorrowedItem> BorrowedItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BorrowedItem>("MovieShelfModel.FK_BorrowedItem_Borrower", "BorrowedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BorrowedItem>("MovieShelfModel.FK_BorrowedItem_Borrower", "BorrowedItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_Borrower_DisplayImage", "DisplayImage")]
        public DisplayImage DisplayImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_Borrower_DisplayImage", "DisplayImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_Borrower_DisplayImage", "DisplayImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisplayImage> DisplayImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_Borrower_DisplayImage", "DisplayImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisplayImage>("MovieShelfModel.FK_Borrower_DisplayImage", "DisplayImage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MovieShelfModel", Name="DisplayImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisplayImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisplayImage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static DisplayImage CreateDisplayImage(global::System.Int32 id, global::System.String name, global::System.String location, global::System.String modifiedBy, global::System.DateTime modifiedDate, global::System.Byte[] timeStamp)
        {
            DisplayImage displayImage = new DisplayImage();
            displayImage.Id = id;
            displayImage.Name = name;
            displayImage.Location = location;
            displayImage.ModifiedBy = modifiedBy;
            displayImage.ModifiedDate = modifiedDate;
            displayImage.TimeStamp = timeStamp;
            return displayImage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_Borrower_DisplayImage", "Borrower")]
        public EntityCollection<Borrower> Borrowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Borrower>("MovieShelfModel.FK_Borrower_DisplayImage", "Borrower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Borrower>("MovieShelfModel.FK_Borrower_DisplayImage", "Borrower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_GenreType_DisplayImage", "GenreType")]
        public EntityCollection<GenreType> GenreTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GenreType>("MovieShelfModel.FK_GenreType_DisplayImage", "GenreType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GenreType>("MovieShelfModel.FK_GenreType_DisplayImage", "GenreType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_DisplayImage", "MovieDetail")]
        public EntityCollection<MovieDetail> MovieDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_DisplayImage", "MovieDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_DisplayImage", "MovieDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieSeries_DisplayImage", "MovieSeries")]
        public EntityCollection<MovieSery> MovieSeries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MovieSery>("MovieShelfModel.FK_MovieSeries_DisplayImage", "MovieSeries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MovieSery>("MovieShelfModel.FK_MovieSeries_DisplayImage", "MovieSeries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieType_DisplayImage", "MovieType")]
        public EntityCollection<MovieType> MovieTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MovieType>("MovieShelfModel.FK_MovieType_DisplayImage", "MovieType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MovieType>("MovieShelfModel.FK_MovieType_DisplayImage", "MovieType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_RatingType_DisplayImage", "RatingType")]
        public EntityCollection<RatingType> RatingTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RatingType>("MovieShelfModel.FK_RatingType_DisplayImage", "RatingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RatingType>("MovieShelfModel.FK_RatingType_DisplayImage", "RatingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_StatusType_DisplayImage", "StatusType")]
        public EntityCollection<StatusType> StatusTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StatusType>("MovieShelfModel.FK_StatusType_DisplayImage", "StatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StatusType>("MovieShelfModel.FK_StatusType_DisplayImage", "StatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_ViewRatingType_DisplayImage", "ViewRatingType")]
        public EntityCollection<ViewRatingType> ViewRatingTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ViewRatingType>("MovieShelfModel.FK_ViewRatingType_DisplayImage", "ViewRatingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ViewRatingType>("MovieShelfModel.FK_ViewRatingType_DisplayImage", "ViewRatingType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MovieShelfModel", Name="GenreType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GenreType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GenreType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static GenreType CreateGenreType(global::System.Int32 id, global::System.String name, global::System.Boolean isDeleted, global::System.String modifiedBy, global::System.DateTime modifiedDate, global::System.Byte[] timeStamp)
        {
            GenreType genreType = new GenreType();
            genreType.Id = id;
            genreType.Name = name;
            genreType.IsDeleted = isDeleted;
            genreType.ModifiedBy = modifiedBy;
            genreType.ModifiedDate = modifiedDate;
            genreType.TimeStamp = timeStamp;
            return genreType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayImageId
        {
            get
            {
                return _DisplayImageId;
            }
            set
            {
                OnDisplayImageIdChanging(value);
                ReportPropertyChanging("DisplayImageId");
                _DisplayImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayImageId");
                OnDisplayImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayImageId;
        partial void OnDisplayImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_GenreType_DisplayImage", "DisplayImage")]
        public DisplayImage DisplayImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_GenreType_DisplayImage", "DisplayImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_GenreType_DisplayImage", "DisplayImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisplayImage> DisplayImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_GenreType_DisplayImage", "DisplayImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisplayImage>("MovieShelfModel.FK_GenreType_DisplayImage", "DisplayImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_GenreType", "MovieDetail")]
        public EntityCollection<MovieDetail> MovieDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_GenreType", "MovieDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_GenreType", "MovieDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MovieShelfModel", Name="MovieDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MovieDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MovieDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static MovieDetail CreateMovieDetail(global::System.Int32 id, global::System.String title, global::System.String modifiedBy, global::System.DateTime modifiedDate, global::System.Byte[] timeStamp)
        {
            MovieDetail movieDetail = new MovieDetail();
            movieDetail.Id = id;
            movieDetail.Title = title;
            movieDetail.ModifiedBy = modifiedBy;
            movieDetail.ModifiedDate = modifiedDate;
            movieDetail.TimeStamp = timeStamp;
            return movieDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MovieSeriesId
        {
            get
            {
                return _MovieSeriesId;
            }
            set
            {
                OnMovieSeriesIdChanging(value);
                ReportPropertyChanging("MovieSeriesId");
                _MovieSeriesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieSeriesId");
                OnMovieSeriesIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MovieSeriesId;
        partial void OnMovieSeriesIdChanging(Nullable<global::System.Int32> value);
        partial void OnMovieSeriesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GenreTypeId
        {
            get
            {
                return _GenreTypeId;
            }
            set
            {
                OnGenreTypeIdChanging(value);
                ReportPropertyChanging("GenreTypeId");
                _GenreTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenreTypeId");
                OnGenreTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GenreTypeId;
        partial void OnGenreTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnGenreTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MovieTypeId
        {
            get
            {
                return _MovieTypeId;
            }
            set
            {
                OnMovieTypeIdChanging(value);
                ReportPropertyChanging("MovieTypeId");
                _MovieTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieTypeId");
                OnMovieTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MovieTypeId;
        partial void OnMovieTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnMovieTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusTypeId
        {
            get
            {
                return _StatusTypeId;
            }
            set
            {
                OnStatusTypeIdChanging(value);
                ReportPropertyChanging("StatusTypeId");
                _StatusTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusTypeId");
                OnStatusTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusTypeId;
        partial void OnStatusTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RatingTypeId
        {
            get
            {
                return _RatingTypeId;
            }
            set
            {
                OnRatingTypeIdChanging(value);
                ReportPropertyChanging("RatingTypeId");
                _RatingTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RatingTypeId");
                OnRatingTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RatingTypeId;
        partial void OnRatingTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnRatingTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayImageId
        {
            get
            {
                return _DisplayImageId;
            }
            set
            {
                OnDisplayImageIdChanging(value);
                ReportPropertyChanging("DisplayImageId");
                _DisplayImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayImageId");
                OnDisplayImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayImageId;
        partial void OnDisplayImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ViewRatingId
        {
            get
            {
                return _ViewRatingId;
            }
            set
            {
                OnViewRatingIdChanging(value);
                ReportPropertyChanging("ViewRatingId");
                _ViewRatingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewRatingId");
                OnViewRatingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ViewRatingId;
        partial void OnViewRatingIdChanging(Nullable<global::System.Int32> value);
        partial void OnViewRatingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _Value;
        partial void OnValueChanging(Nullable<global::System.Decimal> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCollected
        {
            get
            {
                return _DateCollected;
            }
            set
            {
                OnDateCollectedChanging(value);
                ReportPropertyChanging("DateCollected");
                _DateCollected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCollected");
                OnDateCollectedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCollected;
        partial void OnDateCollectedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCollectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_BorrowedItem_MovieDetail", "BorrowedItem")]
        public EntityCollection<BorrowedItem> BorrowedItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BorrowedItem>("MovieShelfModel.FK_BorrowedItem_MovieDetail", "BorrowedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BorrowedItem>("MovieShelfModel.FK_BorrowedItem_MovieDetail", "BorrowedItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_DisplayImage", "DisplayImage")]
        public DisplayImage DisplayImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieDetail_DisplayImage", "DisplayImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieDetail_DisplayImage", "DisplayImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisplayImage> DisplayImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieDetail_DisplayImage", "DisplayImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieDetail_DisplayImage", "DisplayImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_GenreType", "GenreType")]
        public GenreType GenreType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GenreType>("MovieShelfModel.FK_MovieDetail_GenreType", "GenreType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GenreType>("MovieShelfModel.FK_MovieDetail_GenreType", "GenreType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GenreType> GenreTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GenreType>("MovieShelfModel.FK_MovieDetail_GenreType", "GenreType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GenreType>("MovieShelfModel.FK_MovieDetail_GenreType", "GenreType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_MovieSeries", "MovieSeries")]
        public MovieSery MovieSery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieSery>("MovieShelfModel.FK_MovieDetail_MovieSeries", "MovieSeries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieSery>("MovieShelfModel.FK_MovieDetail_MovieSeries", "MovieSeries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MovieSery> MovieSeryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieSery>("MovieShelfModel.FK_MovieDetail_MovieSeries", "MovieSeries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MovieSery>("MovieShelfModel.FK_MovieDetail_MovieSeries", "MovieSeries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_MovieType", "MovieType")]
        public MovieType MovieType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieType>("MovieShelfModel.FK_MovieDetail_MovieType", "MovieType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieType>("MovieShelfModel.FK_MovieDetail_MovieType", "MovieType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MovieType> MovieTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MovieType>("MovieShelfModel.FK_MovieDetail_MovieType", "MovieType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MovieType>("MovieShelfModel.FK_MovieDetail_MovieType", "MovieType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_RatingType", "RatingType")]
        public RatingType RatingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RatingType>("MovieShelfModel.FK_MovieDetail_RatingType", "RatingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RatingType>("MovieShelfModel.FK_MovieDetail_RatingType", "RatingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RatingType> RatingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RatingType>("MovieShelfModel.FK_MovieDetail_RatingType", "RatingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RatingType>("MovieShelfModel.FK_MovieDetail_RatingType", "RatingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_StatusType", "StatusType")]
        public StatusType StatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusType>("MovieShelfModel.FK_MovieDetail_StatusType", "StatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusType>("MovieShelfModel.FK_MovieDetail_StatusType", "StatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatusType> StatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusType>("MovieShelfModel.FK_MovieDetail_StatusType", "StatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatusType>("MovieShelfModel.FK_MovieDetail_StatusType", "StatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_ViewRatingType", "ViewRatingType")]
        public ViewRatingType ViewRatingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ViewRatingType>("MovieShelfModel.FK_MovieDetail_ViewRatingType", "ViewRatingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ViewRatingType>("MovieShelfModel.FK_MovieDetail_ViewRatingType", "ViewRatingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ViewRatingType> ViewRatingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ViewRatingType>("MovieShelfModel.FK_MovieDetail_ViewRatingType", "ViewRatingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ViewRatingType>("MovieShelfModel.FK_MovieDetail_ViewRatingType", "ViewRatingType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MovieShelfModel", Name="MovieSery")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MovieSery : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MovieSery object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static MovieSery CreateMovieSery(global::System.Int32 id, global::System.String name, global::System.Boolean isDeleted, global::System.String modifiedBy, global::System.DateTime modifiedDate, global::System.Byte[] timeStamp)
        {
            MovieSery movieSery = new MovieSery();
            movieSery.Id = id;
            movieSery.Name = name;
            movieSery.IsDeleted = isDeleted;
            movieSery.ModifiedBy = modifiedBy;
            movieSery.ModifiedDate = modifiedDate;
            movieSery.TimeStamp = timeStamp;
            return movieSery;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayImageId
        {
            get
            {
                return _DisplayImageId;
            }
            set
            {
                OnDisplayImageIdChanging(value);
                ReportPropertyChanging("DisplayImageId");
                _DisplayImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayImageId");
                OnDisplayImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayImageId;
        partial void OnDisplayImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieSeries_DisplayImage", "DisplayImage")]
        public DisplayImage DisplayImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieSeries_DisplayImage", "DisplayImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieSeries_DisplayImage", "DisplayImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisplayImage> DisplayImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieSeries_DisplayImage", "DisplayImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieSeries_DisplayImage", "DisplayImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_MovieSeries", "MovieDetail")]
        public EntityCollection<MovieDetail> MovieDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_MovieSeries", "MovieDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_MovieSeries", "MovieDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MovieShelfModel", Name="MovieType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MovieType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MovieType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static MovieType CreateMovieType(global::System.Int32 id, global::System.String name, global::System.Boolean isDeleted, global::System.String modifiedBy, global::System.DateTime modifiedDate, global::System.Byte[] timeStamp)
        {
            MovieType movieType = new MovieType();
            movieType.Id = id;
            movieType.Name = name;
            movieType.IsDeleted = isDeleted;
            movieType.ModifiedBy = modifiedBy;
            movieType.ModifiedDate = modifiedDate;
            movieType.TimeStamp = timeStamp;
            return movieType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayImageId
        {
            get
            {
                return _DisplayImageId;
            }
            set
            {
                OnDisplayImageIdChanging(value);
                ReportPropertyChanging("DisplayImageId");
                _DisplayImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayImageId");
                OnDisplayImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayImageId;
        partial void OnDisplayImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieType_DisplayImage", "DisplayImage")]
        public DisplayImage DisplayImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieType_DisplayImage", "DisplayImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieType_DisplayImage", "DisplayImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisplayImage> DisplayImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieType_DisplayImage", "DisplayImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisplayImage>("MovieShelfModel.FK_MovieType_DisplayImage", "DisplayImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_MovieType", "MovieDetail")]
        public EntityCollection<MovieDetail> MovieDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_MovieType", "MovieDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_MovieType", "MovieDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MovieShelfModel", Name="RatingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RatingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RatingType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static RatingType CreateRatingType(global::System.Int32 id, global::System.String name, global::System.Boolean isDeleted, global::System.String modifiedBy, global::System.DateTime modifiedDate, global::System.Byte[] timeStamp)
        {
            RatingType ratingType = new RatingType();
            ratingType.Id = id;
            ratingType.Name = name;
            ratingType.IsDeleted = isDeleted;
            ratingType.ModifiedBy = modifiedBy;
            ratingType.ModifiedDate = modifiedDate;
            ratingType.TimeStamp = timeStamp;
            return ratingType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayImageId
        {
            get
            {
                return _DisplayImageId;
            }
            set
            {
                OnDisplayImageIdChanging(value);
                ReportPropertyChanging("DisplayImageId");
                _DisplayImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayImageId");
                OnDisplayImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayImageId;
        partial void OnDisplayImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_RatingType_DisplayImage", "DisplayImage")]
        public DisplayImage DisplayImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_RatingType_DisplayImage", "DisplayImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_RatingType_DisplayImage", "DisplayImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisplayImage> DisplayImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_RatingType_DisplayImage", "DisplayImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisplayImage>("MovieShelfModel.FK_RatingType_DisplayImage", "DisplayImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_RatingType", "MovieDetail")]
        public EntityCollection<MovieDetail> MovieDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_RatingType", "MovieDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_RatingType", "MovieDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MovieShelfModel", Name="StatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StatusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static StatusType CreateStatusType(global::System.Int32 id, global::System.String name, global::System.Boolean isDeleted, global::System.String modifiedBy, global::System.DateTime modifiedDate, global::System.Byte[] timeStamp)
        {
            StatusType statusType = new StatusType();
            statusType.Id = id;
            statusType.Name = name;
            statusType.IsDeleted = isDeleted;
            statusType.ModifiedBy = modifiedBy;
            statusType.ModifiedDate = modifiedDate;
            statusType.TimeStamp = timeStamp;
            return statusType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayImageId
        {
            get
            {
                return _DisplayImageId;
            }
            set
            {
                OnDisplayImageIdChanging(value);
                ReportPropertyChanging("DisplayImageId");
                _DisplayImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayImageId");
                OnDisplayImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayImageId;
        partial void OnDisplayImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_StatusType_DisplayImage", "DisplayImage")]
        public DisplayImage DisplayImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_StatusType_DisplayImage", "DisplayImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_StatusType_DisplayImage", "DisplayImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisplayImage> DisplayImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_StatusType_DisplayImage", "DisplayImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisplayImage>("MovieShelfModel.FK_StatusType_DisplayImage", "DisplayImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_StatusType", "MovieDetail")]
        public EntityCollection<MovieDetail> MovieDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_StatusType", "MovieDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_StatusType", "MovieDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MovieShelfModel", Name="ViewRatingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ViewRatingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ViewRatingType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        public static ViewRatingType CreateViewRatingType(global::System.Int32 id, global::System.String name, global::System.String modifiedBy, global::System.DateTime modifiedDate, global::System.Byte[] timeStamp)
        {
            ViewRatingType viewRatingType = new ViewRatingType();
            viewRatingType.Id = id;
            viewRatingType.Name = name;
            viewRatingType.ModifiedBy = modifiedBy;
            viewRatingType.ModifiedDate = modifiedDate;
            viewRatingType.TimeStamp = timeStamp;
            return viewRatingType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DisplayImageId
        {
            get
            {
                return _DisplayImageId;
            }
            set
            {
                OnDisplayImageIdChanging(value);
                ReportPropertyChanging("DisplayImageId");
                _DisplayImageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayImageId");
                OnDisplayImageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DisplayImageId;
        partial void OnDisplayImageIdChanging(Nullable<global::System.Int32> value);
        partial void OnDisplayImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_ViewRatingType_DisplayImage", "DisplayImage")]
        public DisplayImage DisplayImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_ViewRatingType_DisplayImage", "DisplayImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_ViewRatingType_DisplayImage", "DisplayImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DisplayImage> DisplayImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DisplayImage>("MovieShelfModel.FK_ViewRatingType_DisplayImage", "DisplayImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DisplayImage>("MovieShelfModel.FK_ViewRatingType_DisplayImage", "DisplayImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MovieShelfModel", "FK_MovieDetail_ViewRatingType", "MovieDetail")]
        public EntityCollection<MovieDetail> MovieDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_ViewRatingType", "MovieDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MovieDetail>("MovieShelfModel.FK_MovieDetail_ViewRatingType", "MovieDetail", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
