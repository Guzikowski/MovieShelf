//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPF_MovieShelf.MovieServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDomainContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.DisplayImageContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.BaseLookupContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.GenreTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.RatingTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.StatusTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.MovieTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.ViewRatingTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.BaseEntityContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.MovieSeriesContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.MovieDetailContract))]
    public partial class BaseDomainContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRemovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasChanged {
            get {
                return this.HasChangedField;
            }
            set {
                if ((this.HasChangedField.Equals(value) != true)) {
                    this.HasChangedField = value;
                    this.RaisePropertyChanged("HasChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRemoved {
            get {
                return this.IsRemovedField;
            }
            set {
                if ((this.IsRemovedField.Equals(value) != true)) {
                    this.IsRemovedField = value;
                    this.RaisePropertyChanged("IsRemoved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.TimestampField, value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainStatusContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainStatusContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.DomainMessageContract[] MessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.DomainMessageContract[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayImageContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DisplayImageContract : WPF_MovieShelf.MovieServiceReference.BaseDomainContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseLookupContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.GenreTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.RatingTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.StatusTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.MovieTypeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.ViewRatingTypeContract))]
    public partial class BaseLookupContract : WPF_MovieShelf.MovieServiceReference.BaseDomainContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.DisplayImageContract DisplayImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.DisplayImageContract DisplayImage {
            get {
                return this.DisplayImageField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayImageField, value) != true)) {
                    this.DisplayImageField = value;
                    this.RaisePropertyChanged("DisplayImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenreTypeContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GenreTypeContract : WPF_MovieShelf.MovieServiceReference.BaseLookupContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RatingTypeContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class RatingTypeContract : WPF_MovieShelf.MovieServiceReference.BaseLookupContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusTypeContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class StatusTypeContract : WPF_MovieShelf.MovieServiceReference.BaseLookupContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieTypeContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class MovieTypeContract : WPF_MovieShelf.MovieServiceReference.BaseLookupContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewRatingTypeContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ViewRatingTypeContract : WPF_MovieShelf.MovieServiceReference.BaseLookupContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntityContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.MovieSeriesContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WPF_MovieShelf.MovieServiceReference.MovieDetailContract))]
    public partial class BaseEntityContract : WPF_MovieShelf.MovieServiceReference.BaseDomainContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.DisplayImageContract DisplayImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.DisplayImageContract DisplayImage {
            get {
                return this.DisplayImageField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayImageField, value) != true)) {
                    this.DisplayImageField = value;
                    this.RaisePropertyChanged("DisplayImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieSeriesContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class MovieSeriesContract : WPF_MovieShelf.MovieServiceReference.BaseEntityContract {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieDetailContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class MovieDetailContract : WPF_MovieShelf.MovieServiceReference.BaseEntityContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCollectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.GenreTypeContract GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MonetaryValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.RatingTypeContract RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.MovieSeriesContract SeriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.StatusTypeContract StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.MovieTypeContract TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.ViewRatingTypeContract ViewRatingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCollected {
            get {
                return this.DateCollectedField;
            }
            set {
                if ((this.DateCollectedField.Equals(value) != true)) {
                    this.DateCollectedField = value;
                    this.RaisePropertyChanged("DateCollected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.GenreTypeContract Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MonetaryValue {
            get {
                return this.MonetaryValueField;
            }
            set {
                if ((this.MonetaryValueField.Equals(value) != true)) {
                    this.MonetaryValueField = value;
                    this.RaisePropertyChanged("MonetaryValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.RatingTypeContract Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingField, value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.MovieSeriesContract Series {
            get {
                return this.SeriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesField, value) != true)) {
                    this.SeriesField = value;
                    this.RaisePropertyChanged("Series");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.StatusTypeContract Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.MovieTypeContract Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.ViewRatingTypeContract ViewRating {
            get {
                return this.ViewRatingField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewRatingField, value) != true)) {
                    this.ViewRatingField = value;
                    this.RaisePropertyChanged("ViewRating");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainMessageContract", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainMessageContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.EMessageNumber IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.EMessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.EMessageNumber Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.EMessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EMessageNumber", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain")]
    public enum EMessageNumber : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotInitialised = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExceptionMessage = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorLastModifiedByNotPresent = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorLastModifiedByToLong = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorLastModifiedDateNotPresent = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrLastModifiedDateInFuture = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorNameNotPresent = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorNameToLong = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorContactDetailsNotPresent = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorPhoneToLong = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorEmailToLong = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrCollectedDateInFuture = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidBorrowedBy = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidBorrowedMovie = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorDateBorrowedNotPresent = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrDateBorrowedInFuture = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrDateOverdueMustBeInFuture = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrDateReturnedMustBeInFuture = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidDisplayImage = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidSeries = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidGenre = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidType = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidStatus = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidRating = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidViewRating = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErorrInvalidMonetaryValue = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntityListContainsErrors = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeletionErrorStillActive = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeletionErrorStillInUse = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulRead = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoDataFound = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulAdd = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulUpdate = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulDelete = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessfulOperationCheck = 205,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EMessageType", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain")]
    public enum EMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListContractOfMovieDetailContractZchJDT3W", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainListContractOfMovieDetailContractZchJDT3W : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.MovieDetailContract[] EntityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.MovieDetailContract[] EntityList {
            get {
                return this.EntityListField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListField, value) != true)) {
                    this.EntityListField = value;
                    this.RaisePropertyChanged("EntityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainListContractOfMovieSeriesContractZchJDT3W", Namespace="http://schemas.datacontract.org/2004/07/Core_MovieShelf.Interface.Domain.Contract" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DomainListContractOfMovieSeriesContractZchJDT3W : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.DomainStatusContract DomainStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_MovieShelf.MovieServiceReference.MovieSeriesContract[] EntityListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.DomainStatusContract DomainStatus {
            get {
                return this.DomainStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainStatusField, value) != true)) {
                    this.DomainStatusField = value;
                    this.RaisePropertyChanged("DomainStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_MovieShelf.MovieServiceReference.MovieSeriesContract[] EntityList {
            get {
                return this.EntityListField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListField, value) != true)) {
                    this.EntityListField = value;
                    this.RaisePropertyChanged("EntityList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieServiceReference.IMovieService")]
    public interface IMovieService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/HelloService", ReplyAction="http://tempuri.org/IMovieService/HelloServiceResponse")]
        string HelloService(string greeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateMovieDetail", ReplyAction="http://tempuri.org/IMovieService/CreateMovieDetailResponse")]
        WPF_MovieShelf.MovieServiceReference.MovieDetailContract CreateMovieDetail(WPF_MovieShelf.MovieServiceReference.MovieDetailContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateMovieSeries", ReplyAction="http://tempuri.org/IMovieService/CreateMovieSeriesResponse")]
        WPF_MovieShelf.MovieServiceReference.MovieSeriesContract CreateMovieSeries(WPF_MovieShelf.MovieServiceReference.MovieSeriesContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/FetchMovieDetail", ReplyAction="http://tempuri.org/IMovieService/FetchMovieDetailResponse")]
        WPF_MovieShelf.MovieServiceReference.MovieDetailContract FetchMovieDetail(int id, bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/FetchMovieSeries", ReplyAction="http://tempuri.org/IMovieService/FetchMovieSeriesResponse")]
        WPF_MovieShelf.MovieServiceReference.MovieSeriesContract FetchMovieSeries(int id, bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/FetchAllMovieDetails", ReplyAction="http://tempuri.org/IMovieService/FetchAllMovieDetailsResponse")]
        WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieDetailContractZchJDT3W FetchAllMovieDetails(bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/FetchAllMovieSeries", ReplyAction="http://tempuri.org/IMovieService/FetchAllMovieSeriesResponse")]
        WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieSeriesContractZchJDT3W FetchAllMovieSeries(bool includeDeletion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/SaveMovieDetail", ReplyAction="http://tempuri.org/IMovieService/SaveMovieDetailResponse")]
        WPF_MovieShelf.MovieServiceReference.MovieDetailContract SaveMovieDetail(WPF_MovieShelf.MovieServiceReference.MovieDetailContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/SaveMovieSeries", ReplyAction="http://tempuri.org/IMovieService/SaveMovieSeriesResponse")]
        WPF_MovieShelf.MovieServiceReference.MovieSeriesContract SaveMovieSeries(WPF_MovieShelf.MovieServiceReference.MovieSeriesContract contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/SaveAllMovieDetails", ReplyAction="http://tempuri.org/IMovieService/SaveAllMovieDetailsResponse")]
        WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieDetailContractZchJDT3W SaveAllMovieDetails(WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieDetailContractZchJDT3W contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/SaveAllMovieSeries", ReplyAction="http://tempuri.org/IMovieService/SaveAllMovieSeriesResponse")]
        WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieSeriesContractZchJDT3W SaveAllMovieSeries(WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieSeriesContractZchJDT3W contract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/RemoveMovieDetail", ReplyAction="http://tempuri.org/IMovieService/RemoveMovieDetailResponse")]
        WPF_MovieShelf.MovieServiceReference.DomainStatusContract RemoveMovieDetail(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/RemoveMovieSeries", ReplyAction="http://tempuri.org/IMovieService/RemoveMovieSeriesResponse")]
        WPF_MovieShelf.MovieServiceReference.DomainStatusContract RemoveMovieSeries(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieServiceChannel : WPF_MovieShelf.MovieServiceReference.IMovieService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieServiceClient : System.ServiceModel.ClientBase<WPF_MovieShelf.MovieServiceReference.IMovieService>, WPF_MovieShelf.MovieServiceReference.IMovieService {
        
        public MovieServiceClient() {
        }
        
        public MovieServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloService(string greeting) {
            return base.Channel.HelloService(greeting);
        }
        
        public WPF_MovieShelf.MovieServiceReference.MovieDetailContract CreateMovieDetail(WPF_MovieShelf.MovieServiceReference.MovieDetailContract contract) {
            return base.Channel.CreateMovieDetail(contract);
        }
        
        public WPF_MovieShelf.MovieServiceReference.MovieSeriesContract CreateMovieSeries(WPF_MovieShelf.MovieServiceReference.MovieSeriesContract contract) {
            return base.Channel.CreateMovieSeries(contract);
        }
        
        public WPF_MovieShelf.MovieServiceReference.MovieDetailContract FetchMovieDetail(int id, bool includeDeletion) {
            return base.Channel.FetchMovieDetail(id, includeDeletion);
        }
        
        public WPF_MovieShelf.MovieServiceReference.MovieSeriesContract FetchMovieSeries(int id, bool includeDeletion) {
            return base.Channel.FetchMovieSeries(id, includeDeletion);
        }
        
        public WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieDetailContractZchJDT3W FetchAllMovieDetails(bool includeDeletion) {
            return base.Channel.FetchAllMovieDetails(includeDeletion);
        }
        
        public WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieSeriesContractZchJDT3W FetchAllMovieSeries(bool includeDeletion) {
            return base.Channel.FetchAllMovieSeries(includeDeletion);
        }
        
        public WPF_MovieShelf.MovieServiceReference.MovieDetailContract SaveMovieDetail(WPF_MovieShelf.MovieServiceReference.MovieDetailContract contract) {
            return base.Channel.SaveMovieDetail(contract);
        }
        
        public WPF_MovieShelf.MovieServiceReference.MovieSeriesContract SaveMovieSeries(WPF_MovieShelf.MovieServiceReference.MovieSeriesContract contract) {
            return base.Channel.SaveMovieSeries(contract);
        }
        
        public WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieDetailContractZchJDT3W SaveAllMovieDetails(WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieDetailContractZchJDT3W contract) {
            return base.Channel.SaveAllMovieDetails(contract);
        }
        
        public WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieSeriesContractZchJDT3W SaveAllMovieSeries(WPF_MovieShelf.MovieServiceReference.DomainListContractOfMovieSeriesContractZchJDT3W contract) {
            return base.Channel.SaveAllMovieSeries(contract);
        }
        
        public WPF_MovieShelf.MovieServiceReference.DomainStatusContract RemoveMovieDetail(int id) {
            return base.Channel.RemoveMovieDetail(id);
        }
        
        public WPF_MovieShelf.MovieServiceReference.DomainStatusContract RemoveMovieSeries(int id) {
            return base.Channel.RemoveMovieSeries(id);
        }
    }
}
